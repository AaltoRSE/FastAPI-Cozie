version: "3.8"

services:
  influxdb:
    image: influxdb:2.7.10 # Use a Fixed influxDB version.
    container_name: influxdb
    # Uncomment for development
    # ports:
    #   - "8086:8086"  # Expose InfluxDB on localhost:8086
    environment:
      INFLUXDB_DB: ${INFLUXDB_NAME} # Pre-create a database
      INFLUXDB_ADMIN_USER: ${INFLUXDB_USER} # Admin username
      INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_PASSWORD} # Admin password
      INFLUXDB_HTTP_AUTH_ENABLED: "true" # Enable HTTP authentication
    volumes:
      - ${INFLUXDB_FOLDER}:/var/lib/influxdb # Persist data
    networks:
      - cozie-network
  redis:
    image: "redis:alpine"
    networks:
      - cozie-network
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${CERTIFICATE_FOLDER}:/ssl
    depends_on:
      - cozie-app
    networks:
      - cozie-network
  celery_worker:
    build:
      context: ./queue_broker
    environment:
      INFLUXDB_NAME: ${INFLUXDB_NAME} # Pre-create a database
      INFLUXDB_USER: ${INFLUXDB_USER} # Admin username
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD} # Admin password
    depends_on:
      - redis
    networks:
      - cozie-network
  cozie-app:
    build:
      context: ./fastapi_server
    environment:
      DOWNLOAD_FOLDER: /downloads
      INFLUXDB_DB: ${INFLUXDB_NAME} # Pre-create a database
      INFLUXDB_USER: ${INFLUXDB_USER} # Admin username
      INFLUXDB_PASSWORD: ${INFLUXDB_PASSWORD} # Admin password
      ONESIGNAL_TOKEN: ${ONESIGNAL_TOKEN}
      ONESIGNAL_APP_ID: ${ONESIGNAL_APP_ID}
    networks:
      - cozie-network
    depends_on:
      - influxdb
      - celery_worker
    volumes:
      # Mount host folder for the downloads into the container.
      - ${DOWNLOAD_FOLDER}:/downloads
networks:
  cozie-network:
